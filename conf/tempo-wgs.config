// neo / tempo-wgs version
// Note this is a partial config and is meant to update the
// full neo.conf in the tempo /conf folder
//

executor {
  name = "lsf"
  queueSize = 2500
  perJobMemLimit = true
}

params {
  // max_memory = "128.GB"
  // mem_per_core = true
  minWallTime = 12.h
  medWallTime = 24.h
  maxWallTime = 48.h
}

process {

  //time = { task.attempt < 3 ? 24.h * task.attempt  : 100.h }
  time = { task.attempt < 3 ? 48.h * task.attempt  : 256.h }
  clusterOptions = "-R 'cmorsc1'"

  withName:CrossValidateSamples {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:SplitLanesR1 {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:SplitLanesR2 {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:CreateScatteredIntervals {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:SomaticDellyCall {
    cpus = { 1 + (task.attempt * 10) }
    memory = { 4.GB }
    time = { task.attempt < 2 ? 100.h : 500.h }
  }
  withName:'runBRASS.+' {
    cpus = { 4 * task.attempt }
  }
  //
  // 2024-11-15
  //
  withName:RunMutect2 {
    cpus = { 16*task.attempt }
    time = { task.attempt < 3 ? 2.h * task.attempt : 12.h }
  }
  withName:QcQualimap {
    cpus = { 8 + (4 * task.attempt) }
    memory = { 8.GB }
  }
  //
  //

  withName:SomaticCombineMutect2Vcf {
    cpus = { 6 * task.attempt }
    time = { task.attempt < 3 ? 30.h * task.attempt : 500.h }
  }
  withName:SomaticCombineChannel {
    cpus = { 32 }
    time = { task.attempt < 3 ? 30.h * task.attempt : 500.h }
    memory = { 5.GB }
  }
  withName: '.*RunSvABA' {
    cpus = { 32 * task.attempt }
    memory = { 2.GB }
    time = { task.attempt < 3 ? 30.h * task.attempt : 500.h }
  }
  withName:SomaticRunManta {
    cpus = { 32 * task.attempt }
    memory = { 2.GB }
    time = { task.attempt < 3 ? 30.h * task.attempt : 500.h }
  }
  withName:SomaticAnnotateMaf {
    cpus = { 12 * task.attempt }
    time = { task.attempt < 3 ? 30.h * task.attempt : 500.h }
  }
  withName:SomaticFacetsAnnotation {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:DoFacets {
    cpus = { 4 * task.attempt }
    memory = { 12.GB }
    time = { task.attempt < 3 ? 12.h * task.attempt : 500.h }
  }
  withName:DoFacetsPreviewQC {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:runAscatAlleleCount{
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:RunMsiSensor {
    cpus = { 1 + (2 * task.attempt) }
  }
  //
  // Adjust 2024-11-15 - roughly half crashed but unknown reason
  //
  withName:RunLOHHLA {
    cpus = { 24+(12 * task.attempt) }
    memory = { 1.GB }
    time = { task.attempt < 3 ? 6.h * task.attempt  : 24h }
  }
  withName:RunMutationSignatures {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:RunNeoantigen {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:MetaDataParser {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:GermlineDellyCall {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:GermlineCombineHaplotypecallerVcf {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:GermlineCombineChannel {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:GermlineAnnotateMaf {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:GermlineFacetsAnnotation {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:QcPileup {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:QcConpair {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:QcConpairAll {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:QcAlfred {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:SomaticAggregateMaf {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:SomaticAggregateNetMHC {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:SomaticAggregateFacets {
    cpus = { 1 + (2 * task.attempt) }
  }
   withName:SomaticAggregateSv {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:SomaticAggregateMetadata {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:SomaticAggregateHRDetect {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:GermlineAggregateMaf {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:GermlineAggregateSv {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:QcBamAggregate {
    cpus = { 1 + (2 * task.attempt) }
  }
  withName:QcConpairAggregate {
    cpus = { 1 + (2 * task.attempt) }
  }
  withLabel:multiqc_process { // SampleRunMultiQC , SomaticRunMultiQC , CohortRunMultiQC
    cpus = { 1 + (2 * task.attempt) }
  }

}
