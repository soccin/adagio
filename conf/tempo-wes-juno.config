/*
 * -------------------------------------------------
 * Juno resource config
 * -------------------------------------------------
 * Process resources for Juno
 * -------------------------------------------------
 */

//------------- Read alignment

 process {
  withName:CrossValidateSamples {
    cpus = { 2 }
    memory = { 1.GB }
    executor = 'local'
  }
  withName:SplitLanesR1 {
    cpus = { 2 }
    memory = { 1.GB }
  }
  withName:SplitLanesR2 {
    cpus = { 2 }
    memory = { 1.GB }
  }
  withName:AlignReads {
    cpus = { 8 }
    memory = { 15.GB }
  }
  withName:GATK4SPARK_MARKDUPLICATES {
//  Controlling time by data size, 100 means 100 GB here. maxWallTime and minWall time is set in executor config file based on the queue settings of your cluster
    task.time = { meta.size > 100 ? params.maxWallTime : params.minWallTime }
    cpus = { 16 }
    memory = { 4.GB + (task.attempt).GB }
  }
  withName:GATK4SPARK_SETNMMDANDUQTAGS {
    task.time = { meta.size > 100 ? params.maxWallTime : params.minWallTime }
    cpus = { 4 }
    memory = { 2.GB + (task.attempt).GB }
  }
  withName:BQSR_SPLITINTERVALS {
    cpus = { 2 }
    memory = { 1.GB + (task.attempt).GB }
  }
  withName:GATK4SPARK_BASERECALIBRATOR {
    task.time = { meta.size > 100 ? params.maxWallTime : params.minWallTime }
    cpus = { 4 }
    memory = { 8.GB + (task.attempt).GB }
  }
  withName:GATK4_GATHERBQSRREPORTS {
    cpus = { 4 }
    memory = { 2.GB + (task.attempt).GB }
  }
  withName:GATK4SPARK_APPLYBQSR {
    task.time = { meta.size > 100 ? params.maxWallTime : params.minWallTime }
    cpus = { 8 }
    memory = { 8.GB + (task.attempt).GB }
  }
  withName:'MERGE_SETTAGS_BAM|MERGE_BQSR_BAM' {
    task.time = { meta.size > 100 ? params.maxWallTime : params.minWallTime }
    cpus = { 8 }
    memory = { 2.GB + (task.attempt).GB }
  }
  withName:'INDEX_SETTAGS_BAM|INDEX_BQSR_BAM' {
    cpus = { 8 }
    memory = { 2.GB + (task.attempt).GB }
  }
  withName:CreateScatteredIntervals {
    cpus = { 2 * task.attempt }
    memory = { 2.GB }
  }

//------------- Somatic pipeline

  withName:SomaticDellyCall {
    cpus = { 2 }
    memory = { 8.GB * task.attempt }
  }
  withName:RunMutect2 {
    cpus = { 3 }
    memory = { 4.GB * task.attempt }
  }
  withName:SomaticCombineMutect2Vcf {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:SomaticRunManta {
    cpus = { 8 }
    memory = { 1.GB * task.attempt }
  }
  withName: '.*RunSvABA' {
    cpus = { 8 }
    memory = { 2.GB * task.attempt }
    time = { task.attempt < 3 ? 30.h * task.attempt : 500.h }
  }
  withName:SomaticRunStrelka2 {
    cpus = { 8 }
    memory = { 1.GB * task.attempt }
  }
  withName:SomaticCombineChannel {
    cpus = { 2 }
    memory = { task.attempt < 3 ? 2.GB * task.attempt : 4.GB * task.attempt }
  }
  withName:SomaticAnnotateMaf {
    cpus = { 2 }
    memory = { 8.GB * task.attempt }
  }
  withName:SomaticMergeSVs {
    cpus = { task.attempt < 4 ? 1 : 2 } 
    memory = { task.attempt < 3 ? 1.GB * task.attempt : 5.Gb * task.attempt } 
  }
  withName:DoFacets {
    cpus = { 2 }
    memory = { 20.GB * task.attempt }
  }
  withName:DoFacetsPreviewQC {
    cpus = { 2 }
    memory = { 4.Gb * task.attempt }
  }
  withName:RunMsiSensor {
    cpus = { 2 }
    memory = { task.attempt < 3 ? 2.GB * task.attempt : 6.GB * task.attempt }
  }
  withName:RunPolysolver {
    cpus = { 8 }
    memory = { 1.GB * task.attempt }
  }
  withName:RunLOHHLA {
    cpus = { 2 }
    memory = { 3.GB * task.attempt }
  } 
  withName:RunMutationSignatures {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:SomaticFacetsAnnotation {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:RunNeoantigen {
    cpus = { 4 * task.attempt }
    memory = { 4.GB * task.attempt * 2 }
  }
  withName:MetaDataParser {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:SomaticSVVcf2Bedpe {
    cpus = { task.attempt < 4 ? 1 : 2 } 
    memory = { task.attempt < 3 ? 1.GB * task.attempt : 5.Gb * task.attempt } 
  }
  withName:SomaticAnnotateSVBedpe {
    cpus = { task.attempt < 4 ? 1 : 2 }
    memory = { 8.GB * task.attempt }
  }

//------------- Germline pipeline

  withName:GermlineDellyCall {
    cpus = { 2 }
    memory = { 4.GB * task.attempt }
  }
  withName:GermlineRunHaplotypecaller {
    cpus = { 2 }
    memory = { 2.GB * task.attempt }
  }
  withName:GermlineCombineHaplotypecallerVcf {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:GermlineRunManta {
    cpus = { 8 }
    memory = { 1.GB * task.attempt }
  }
  withName:GermlineRunStrelka2 {
    cpus = { 8 }
    memory = { 1.GB * task.attempt }
  }
  withName:GermlineCombineChannel {
    cpus = { 2 }
    memory = { 4.GB * task.attempt }
  }
  withName:GermlineAnnotateMaf {
    cpus = { 2 }
    memory = { 6.GB * task.attempt }
  }
  withName:GermlineFacetsAnnotation {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:GermlineMergeSVs {
    cpus = { task.attempt < 4 ? 1 : 2 } 
    memory = { task.attempt < 3 ? 1.GB * task.attempt : 5.Gb * task.attempt } 
  }
  withName:GermlineSVVcf2Bedpe {
    cpus = { task.attempt < 4 ? 1 : 2 } 
    memory = { task.attempt < 3 ? 1.GB * task.attempt : 5.Gb * task.attempt } 
  }
  withName:GermlineAnnotateSVBedpe {
    cpus = { task.attempt < 4 ? 2 : 3 }
    memory = { 8.GB * task.attempt }
  }

//------------- Quality Control

  withName:QcPileup {
    cpus = { 2 }
    memory = { 2.GB * task.attempt }
  }
  withName:QcConpair {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:QcConpairAll {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:QcAlfred {
    cpus = { 2 }
    memory = { 2.GB * task.attempt }
  }
  withName:QcQualimap {
    cpus = { 2 }
    memory = { task.attempt < 3 ? 6.GB * task.attempt : 12.GB * task.attempt }
  }
  withName:QcCollectHsMetrics {
    cpus = { 2 }
    memory = { 2.GB * task.attempt }
  }

//------------- Cohort Aggregation

  withName:SomaticAggregateMaf {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:SomaticAggregateNetMHC {
    cpus = { 2 }
    memory = { 1.GB * task.attempt}
  }
  withName:SomaticAggregateFacets {
    cpus = { 2 }
    memory = { 1.GB * task.attempt}
  }
   withName:SomaticAggregateSv {
    cpus = { 2 }
    memory = { 1.GB * task.attempt}
  }
  withName:SomaticAggregateMetadata {
    cpus = { 2 }
    memory = { 1.GB * task.attempt}
  }
  withName:GermlineAggregateMaf {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:GermlineAggregateSv {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:QcBamAggregate {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:QcConpairAggregate {
    cpus = { 2 }
    memory = { 1.GB * task.attempt }
  }
  withName:CohortRunMultiQC {
    cpus = { 2 }
    memory = { task.attempt < 3 ? 5.GB * task.attempt : 30.GB }
  }

//------------- Multi-Stage Containers

  withLabel:multiqc_process { // SampleRunMultiQC , SomaticRunMultiQC , CohortRunMultiQC
    cpus = { 2 }
    memory = { 3.GB * task.attempt }
  }

}
